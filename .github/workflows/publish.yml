# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
    - main

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Build Windows with Gradle
      run: ./gradlew build -Pos=windows
    
    - name: ZIP Windows Build
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'windows-snapshot.zip'
        directory: 'build/libs'
        exclusions: '*.zip*'
        
    - name: Delete Tag and Release
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: 'true'
        tag_name: 'devbuild'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: 'build/libs/windows-snapshot.zip'
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: ${{ github.sha }}
        name: 'Latest Development Build'
        allowUpdates: 'true'
        prerelease: 'true'
        tag: 'devbuild'
        
  build-linux:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Build Windows with Gradle
      run: ./gradlew build -Pos=windows
    
    - name: ZIP Windows Build
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'windows-snapshot.zip'
        directory: 'build/libs'
        exclusions: '*.zip*'
        
    - name: Build Linux with Gradle
      run: ./gradlew build -Pos=linux
    
    - name: ZIP Linux Build
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'linux-snapshot.zip'
        directory: 'build/libs'
        exclusions: '*.zip*'
        
    - name: Build MacOS with Gradle
      run: ./gradlew build -Pos=macos
    
    - name: ZIP MacOS Build
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'macos-snapshot.zip'
        directory: 'build/libs'
        exclusions: '*.zip*'

    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: 'build/libs/linux-snapshot.zip,build/libs/macos-snapshot.zip'
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: ${{ github.sha }}
        name: 'Latest Development Build'
        allowUpdates: 'true'
        prerelease: 'true'
        tag: 'devbuild'
